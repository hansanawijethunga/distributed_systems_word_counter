syntax = "proto3";

package leader_election;

// Service for leader election
service LeaderElection {
  // A node challenges a higher node
  rpc Challenge (ChallengeRequest) returns (ChallengeResponse);

  // Method to update the role of a node
  rpc UpdateRole (UpdateRoleRequest) returns (UpdateRoleResponse);

  // Queue a job to be processed
  rpc QueueJob (JobRequest) returns (AcknowledgementResponse);

  rpc PromiseProposal (PromiseRequest) returns (AcknowledgementResponse);

  rpc InformFinalResult(ResultRequest) returns (AcknowledgementResponse);

  rpc InformLeanerRequest(LeanerRequest) returns (AcknowledgementResponse);
}

// New LoginService
service LoginService {
  rpc LogMessageRequest (LogRequest) returns (AcknowledgementResponse);
}

// Request sent when challenging a higher node
message ChallengeRequest {
  int32 node_id = 1;     // Node making the challenge
}

// Response to a challenge message
message ChallengeResponse {
  bool acknowledged = 1; // Whether the challenge was acknowledged
}

// Request to update the role of a node
message UpdateRoleRequest {
  string new_role = 1; // The new role for the node
}

message ProposalRequest {
  string proposal_no = 1; // The new role for the node
}

// Response to the role update request
message UpdateRoleResponse {
  bool success = 1;      // Whether the role update was successful
}

// Request for job details
message JobRequest {
  int32 page = 1;        // Page number for the job
  int32 line = 2;        // Line number for the job
  string range = 3;      // Range of the job
  string text = 4;       // Text associated with the job
  string sequence = 5;
}

// Acknowledgement response for job queue action
message AcknowledgementResponse {
  bool success = 1; // Whether the job was successfully queued
}

message PromiseRequest {
  int32 node_id = 1;
  string proposal_number = 2;
  bool promise = 3;
}

message ResultRequest {
    string proposal_number = 1;
    bool status = 2;
}

message LeanerRequest {
    string proposal_number = 1;
    bool value = 2;
    int32 node_id = 3;
    string data = 4;
}

message LogRequest {
    int32 log_level = 1;
    string message = 2;
}
